--
-- (C) 2016 Kriss@XIXs.com
--
local coroutine,package,string,table,math,io,os,debug,assert,dofile,error,_G,getfenv,getmetatable,ipairs,Gload,loadfile,loadstring,next,pairs,pcall,print,rawequal,rawget,rawset,select,setfenv,setmetatable,tonumber,tostring,type,unpack,_VERSION,xpcall,module,require=coroutine,package,string,table,math,io,os,debug,assert,dofile,error,_G,getfenv,getmetatable,ipairs,load,loadfile,loadstring,next,pairs,pcall,print,rawequal,rawget,rawset,select,setfenv,setmetatable,tonumber,tostring,type,unpack,_VERSION,xpcall,module,require


local wgrd=require("wetgenes.grd")
local wstr=require("wetgenes.string")

--module
local M={ modname=(...) } ; package.loaded[M.modname]=M

local s={}

-- export the raw strings
M.textmap=s;

-- Numbers

s["0"]=[[
# # # . 
# . # . 
# . # . 
# . # . 
# # # . 
. . . . 
]]

s["1"]=[[
. # . . 
# # . . 
. # . . 
. # . . 
# # # . 
. . . . 
]]

s["2"]=[[
# # # . 
. . # . 
# # # . 
# . . . 
# # # . 
. . . . 
]]

s["3"]=[[
# # # . 
. . # . 
# # # . 
. . # . 
# # # . 
. . . . 
]]

s["4"]=[[
# . # . 
# . # . 
# # # . 
. . # . 
. . # . 
. . . . 
]]

s["5"]=[[
# # # . 
# . . . 
# # # . 
. . # . 
# # # . 
. . . . 
]]

s["6"]=[[
# # # . 
# . . . 
# # # . 
# . # . 
# # # . 
. . . . 
]]

s["7"]=[[
# # # . 
. . # . 
. . # . 
. . # . 
. . # . 
. . . . 
]]

s["8"]=[[
# # # . 
# . # . 
# # # . 
# . # . 
# # # . 
. . . . 
]]

s["9"]=[[
# # # . 
# . # . 
# # # . 
. . # . 
. . # . 
. . . . 
]]

-- letters

s["A"]=[[
# # # . 
# . # . 
# # # . 
# . # . 
# . # . 
. . . . 
]]

s["B"]=[[
# # # . 
# . # . 
# # . . 
# . # . 
# # # . 
. . . . 
]]

s["C"]=[[
# # # . 
# . . . 
# . . . 
# . . . 
# # # . 
. . . . 
]]

s["D"]=[[
# # . . 
# . # . 
# . # . 
# . # . 
# # . . 
. . . . 
]]

s["E"]=[[
# # # . 
# . . . 
# # . . 
# . . . 
# # # . 
. . . . 
]]

s["F"]=[[
# # # . 
# . . . 
# # . . 
# . . . 
# . . . 
. . . . 
]]

s["G"]=[[
. # # . 
# . . . 
# . . . 
# . # . 
. # # . 
. . . . 
]]

s["H"]=[[
# . # . 
# . # . 
# # # . 
# . # . 
# . # . 
. . . . 
]]

s["I"]=[[
# # # . 
. # . . 
. # . . 
. # . . 
# # # . 
. . . . 
]]

s["J"]=[[
. # # . 
. . # . 
. . # . 
# . # . 
# # # . 
. . . . 
]]

s["K"]=[[
# . # . 
# . # . 
# # . . 
# . # . 
# . # . 
. . . . 
]]

s["L"]=[[
# . . . 
# . . . 
# . . . 
# . . . 
# # # . 
. . . . 
]]

s["M"]=[[
# . # . 
# # # . 
# # # . 
# . # . 
# . # . 
. . . . 
]]

s["N"]=[[
# # # . 
# . # . 
# . # . 
# . # . 
# . # . 
. . . . 
]]

s["O"]=[[
. # # . 
# . # . 
# . # . 
# . # . 
# # . . 
. . . . 
]]

s["P"]=[[
# # # . 
# . # . 
# # # . 
# . . . 
# . . . 
. . . . 
]]

s["Q"]=[[
. # # . 
# . # . 
# . # . 
# # # . 
# # # . 
. . . . 
]]

s["R"]=[[
# # # . 
# . # . 
# # . . 
# . # . 
# . # . 
. . . . 
]]

s["S"]=[[
# # # . 
# . . . 
. # . . 
. . # . 
# # # . 
. . . . 
]]

s["T"]=[[
# # # . 
. # . . 
. # . . 
. # . . 
. # . . 
. . . . 
]]

s["U"]=[[
# . # . 
# . # . 
# . # . 
# . # . 
# # # . 
. . . . 
]]

s["V"]=[[
# . # . 
# . # . 
# . # . 
. # . . 
. # . . 
. . . . 
]]

s["W"]=[[
# . # . 
# . # . 
# # # . 
# # # . 
# . # . 
. . . . 
]]

s["X"]=[[
# . # . 
# . # . 
. # . . 
# . # . 
# . # . 
. . . . 
]]

s["Y"]=[[
# . # . 
# . # . 
# # # . 
. # . . 
. # . . 
. . . . 
]]

s["Z"]=[[
# # # . 
, . # . 
, # , . 
# . , . 
# # # . 
. . . . 
]]

-- lowercase

s["a"]=[[
. . . . 
# # . . 
. . # . 
# # # . 
# # # . 
. . . . 
]]

s["b"]=[[
# . . . 
# # # . 
# . # . 
# . # . 
# # # . 
. . . . 
]]

s["c"]=[[
. . . . 
# # # . 
# . . . 
# . . . 
# # # . 
. . . . 
]]

s["d"]=[[
. . # . 
# # # . 
# . # . 
# . # . 
# # # . 
. . . . 
]]

s["e"]=[[
. . . . 
# # # . 
# # # . 
# . . . 
. # # . 
. . . . 
]]

s["f"]=[[
. # # . 
. # . . 
# # # . 
. # . . 
. # . . 
. . . . 
]]

s["g"]=[[
. . . . 
# # # . 
# # # . 
. . # . 
# # . . 
. . . . 
]]

s["h"]=[[
# . . . 
# # # . 
# . # . 
# . # . 
# . # . 
. . . . 
]]

s["i"]=[[
. . . . 
. # . . 
. # . . 
. # . . 
. # . . 
. . . . 
]]

s["j"]=[[
. . . . 
. . # . 
. . # . 
# . # . 
# # # . 
. . . . 
]]

s["k"]=[[
# . . . 
# . # . 
# # . . 
# . # . 
# . # . 
. . . . 
]]

s["l"]=[[
. # . . 
. # . . 
. # . . 
. # . . 
. # # . 
. . . . 
]]

s["m"]=[[
. . . . 
# . # . 
# # # . 
# . # . 
# . # . 
. . . . 
]]

s["n"]=[[
. . . . 
# # # . 
# . # . 
# . # . 
# . # . 
. . . . 
]]

s["o"]=[[
. . . . 
# # # . 
# . # . 
# . # . 
# # # . 
. . . . 
]]

s["p"]=[[
. . . . 
# # # . 
# . # . 
# # # . 
# . . . 
. . . . 
]]

s["q"]=[[
. . . . 
# # # . 
# . # . 
# # # . 
. . # . 
. . . . 
]]

s["r"]=[[
. . . . 
# # # . 
# . . . 
# . . . 
# . . . 
. . . . 
]]

s["s"]=[[
. . . . 
# # # . 
# # . . 
. # # . 
# # # . 
. . . . 
]]

s["t"]=[[
. # . . 
# # # . 
. # . . 
. # . . 
. # # . 
. . . . 
]]

s["u"]=[[
. . . . 
# . # . 
# . # . 
# . # . 
# # # . 
. . . . 
]]

s["v"]=[[
. . . . 
# . # . 
# . # . 
# . # . 
. # . . 
. . . . 
]]

s["w"]=[[
. . . . 
# . # . 
# . # . 
# # # . 
# . # . 
. . . . 
]]

s["x"]=[[
. . . . 
# . # . 
. # . . 
. # . . 
# . # . 
. . . . 
]]

s["y"]=[[
. . . . 
# . # . 
# # # . 
. . # . 
# # # . 
. . . . 
]]

s["z"]=[[
. . . . 
# # # . 
, # # . 
# # , . 
# # # . 
. . . . 
]]


-- symbols

s["!"]=[[
. # . . 
, # . . 
, # , . 
. . , . 
. # . . 
. . . . 
]]

s["\""]=[[
# . # . 
# . # . 
, . , . 
. . , . 
. . . . 
. . . . 
]]

s["#"]=[[
# . # . 
# # # . 
# . # . 
# # # . 
# . # . 
. . . . 
]]

s["$"]=[[
. # # . 
# # . . 
# # # . 
. # # . 
# # . . 
. . . . 
]]

s["%"]=[[
# . . . 
, . # . 
, # , . 
# . , . 
. . # . 
. . . . 
]]

s["&"]=[[
. # . . 
# . # . 
. # . . 
# . # . 
. # # . 
. . . . 
]]

s["'"]=[[
. # . . 
, # . . 
, . , . 
. . , . 
. . . . 
. . . . 
]]

s["("]=[[
. # . . 
# . . . 
# . , . 
# . , . 
. # . . 
. . . . 
]]

s[")"]=[[
. # . . 
. . # . 
. . # . 
. . # . 
. # . . 
. . . . 
]]

s["*"]=[[
# . # . 
. # . . 
# # # . 
. # . . 
# . # . 
. . . . 
]]

s["+"]=[[
. . . . 
. # . . 
# # # . 
. # . . 
. . . . 
. . . . 
]]

s[","]=[[
. . . . 
. . . . 
. . . . 
. # . . 
. . # . 
. . . . 
]]

s["-"]=[[
. . . . 
. . . . 
# # # . 
. . . . 
. . . . 
. . . . 
]]

s["."]=[[
. . . . 
. . . . 
. . . . 
. # # . 
. # # . 
. . . . 
]]

s["/"]=[[
. . . . 
. . # . 
. # . . 
# . . . 
. . . . 
. . . . 
]]

s[":"]=[[
. # # . 
. # # . 
. . . . 
. # # . 
. # # . 
. . . . 
]]

s[";"]=[[
. # # . 
. # # . 
. . . . 
. # . . 
. . # . 
. . . . 
]]

s["<"]=[[
. . # . 
. # . . 
# . . . 
. # . . 
. . # . 
. . . . 
]]

s["="]=[[
. . . . 
# # # . 
. . . . 
# # # . 
. . . . 
. . . . 
]]

s[">"]=[[
# . . . 
. # . . 
. . # . 
. # . . 
# . . . 
. . . . 
]]

s["?"]=[[
# # # . 
# . # . 
. # # . 
. # . . 
. # . . 
. . . . 
]]

s["@"]=[[
. # # . 
# . # . 
# # # . 
# . . . 
. # # . 
. . . . 
]]

s["="]=[[
. . . . 
# # # . 
. . . . 
# # # . 
. . . . 
. . . . 
]]

s["["]=[[
# # . . 
# . . . 
# . . . 
# . . . 
# # . . 
. . . . 
]]

s["\\"]=[[
. . . . 
# . . . 
. # . . 
. . # . 
. . . . 
. . . . 
]]

s["]"]=[[
. # # . 
. . # . 
. . # . 
. . # . 
. # # . 
. . . . 
]]

s["^"]=[[
. # . . 
# . # . 
. . . . 
. . . . 
. . . . 
. . . . 
]]

s["_"]=[[
. . . . 
. . . . 
. . . . 
. . . . 
# # # . 
. . . . 
]]

s["`"]=[[
. # . . 
. . # . 
. . . . 
. . . . 
. . . . 
. . . . 
]]

s["{"]=[[
. # . . 
# . . . 
. # . . 
# . . . 
. # . . 
. . . . 
]]

s["|"]=[[
. # . . 
. # . . 
. # . . 
. # . . 
. # . . 
. . . . 
]]

s["}"]=[[
. # . . 
. . # . 
. # . . 
. . # . 
. # . . 
. . . . 
]]

s["~"]=[[
# . # . 
. # . . 
. . . . 
. . . . 
. . . . 
. . . . 
]]

-- build a bitmap which is a 128x1 array of characters.
M.grd_mask=wgrd.create("U8_RGBA_PREMULT",128*4,1*6,1)

-- calling this function repeatedly is inefficient but we do not care
local solid_check=function(idx,x,y)
	local m=s[string.char(idx)]
	if m then
		local lines=wstr.split(m,"\n")
		local line=lines[y+1]
		if line then
			local c=line:sub(1+x*2,1+x*2)
			if c=="#" then return true end
		end
	end
	return false
end

for i=0,127 do -- import each ascii char from textmaps above
	local t={}
	for y=0,5 do
		for x=0,3 do
			if solid_check(i,x,y) then
				t[#t+1]=255
				t[#t+1]=255
				t[#t+1]=255
				t[#t+1]=255
			else
				t[#t+1]=0
				t[#t+1]=0
				t[#t+1]=0
				t[#t+1]=0
			end
		end
	end
	M.grd_mask:pixels(i*4,0,4,6,t)
end

